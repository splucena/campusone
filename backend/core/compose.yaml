# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  web-core-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PYTHON_VERSION=3.11.9
    ports:
      - 8000:8000
    volumes:
      - .:/app
      - ./requirements.txt:/app/requirements.txt
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      web-core-db:
        condition: service_healthy
    networks:
      - web_core_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  web-core-db:
    image: postgres:latest
    container_name: web_core_db
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - web-core-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgre"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - web_core_network

volumes:
  web-core-db-data:

networks:
  web_core_network:
    driver: bridge